import telebot
from telebot import types
import logging

BOT_API = 'YOUR_API'


bot = telebot.TeleBot(BOT_API)
from telebot import types
telebot.logger.setLevel(logging.INFO)


@bot.message_handler(commands=['start'])
def start(message):
    # —Å–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = types.InlineKeyboardMarkup()
    # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –Ω–µ—ë –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    bot1 = types.InlineKeyboardButton("‚ú®–°–±–æ—Ä–∫–∏", callback_data="sborki")
    bot2 = types.InlineKeyboardButton("‚ò†Ô∏è–ë–µ–∑–¥–Ω–∞", callback_data="bezdna")
    markup.add(bot1, bot2,)
    file = open('–ø—Ä–µ–≤—å—é.jpg', 'rb')
    bot.send_photo(message.chat.id, file)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Å—Ç–≤—É—é –í–∞—Å, –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫/—Ü–∞! –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–æ—á–∫—É:', reply_markup=markup)
    
    

@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    if call.data == "sborki":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup2 = types.InlineKeyboardMarkup()
        btn4 = types.InlineKeyboardButton('–ö—Ä–∏–æ', callback_data='krio')
        btn5 = types.InlineKeyboardButton('–ü–∏—Ä–æ', callback_data='piro')
        btn6 = types.InlineKeyboardButton('–ì–∏–¥—Ä–æ', callback_data='gidro')
        btn7 = types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ', callback_data='electro')
        btn8 = types.InlineKeyboardButton('–ì–µ–æ', callback_data='heo')
        btn9 = types.InlineKeyboardButton('–î–µ–Ω–¥—Ä–æ', callback_data='dendro')
        btn10 = types.InlineKeyboardButton('–ê–Ω–µ–º–æ', callback_data='anemo')
        btn11 = types.InlineKeyboardButton('üîôback', callback_data='back')
        markup2.add(btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11)
        
        #bot.send_photo(call.message.chat.id)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Å—Ç–∏—Ö–∏—é:', reply_markup=markup2)        

    #elif call.data == 'back':
        #bot.edit_message_text(call.message.text, call.message.chat.id, call.message.message_id, reply_markup=start(call.message))

    elif call.data == "bezdna":
        markup1 = types.InlineKeyboardMarkup()
        btn3 = types.InlineKeyboardButton('üîôback', callback_data='back')
        markup1.add(btn3)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        file = open('–±–µ–∑–¥–Ω–∞.jpg', 'rb')
        bot.send_photo(call.message.chat.id, file)
        bot.send_message(call.message.chat.id, '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ—Ä–º–∞—Ü–∏—è –ø–æ –±–µ–∑–¥–Ω–µ –≤–µ—Ä—Å–∏—è 5.2', reply_markup=markup1)        

    
    elif call.data == "krio": 
        markup3 = types.InlineKeyboardMarkup()
        btn12 = types.InlineKeyboardButton('–ê—è–∫–∞', callback_data='Ayka')
        btn13 = types.InlineKeyboardButton('–≠–æ–ª–∞', callback_data= 'Eola')
        btn14 = types.InlineKeyboardButton('–®–µ–Ω—å –•—ç', callback_data= 'ShenHe')
        btn15 = types.InlineKeyboardButton('–¶–∏–¶–∏', callback_data = 'CiCi')
        btn16 = types.InlineKeyboardButton('–†–∏–∑–ª–∏', callback_data = 'Rizli') 
        btn17 = types.InlineKeyboardButton('–ì–∞–Ω—å –Æ–π', callback_data= 'Koza')
        btn18 = types.InlineKeyboardButton('üîôback', callback_data='back')
        markup3.add(btn12, btn13, btn14, btn15, btn16, btn17, btn18)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:', reply_markup=markup3)
        
    elif call.data  == 'Ayka':
        markup4 = types.InlineKeyboardMarkup()
        btn19 = types.InlineKeyboardButton('üîôback', callback_data='back')
        markup4.add(btn19)
        file = open('–∞—è–∫–∞.jpg', 'rb')
        bot.send_photo(call.message.chat.id, file)
        bot.send_message(call.message.chat.id, '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –ê—è–∫–∞', reply_markup=markup4)
    
    elif call.data == 'back':
        bot.edit_message_text(call.message.text, call.message.chat.id, call.message.message_id, reply_markup=start(call.message))





storage = dict()

def init_storage(user_id):
    storage[user_id] = dict(attempt=None, random_digit=None)

def set_data_storage(user_id, key, value):
    storage[user_id][key] = value

def get_data_storage(user_id):
    return storage[user_id]

bot.polling()
